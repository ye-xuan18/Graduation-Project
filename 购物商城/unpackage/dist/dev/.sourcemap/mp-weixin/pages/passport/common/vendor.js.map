{"version":3,"sources":["uni-app:///utils/RegExp.js","uni-app:///api/connect.js","uni-app:///api/entry.js"],"names":["mobile","email","password","integer","Integer","money","TINumber","IDCard","userName","URL","TEL","licenseNum","request","http","webConnect","code","url","method","Method","GET","needToken","header","openIdLogin","params","clientType","POST","data","loginCallback","state","mpAutoLogin","getCompanyDetail","applyFirst","PUT","applySecond","applyThird"],"mappings":"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","file":"pages/passport/common/vendor.js","sourcesContent":["/**\r\n * 各种正则表达式\r\n * mobile   手机号\r\n * email    电子邮箱\r\n * password 密码【6-20位】\r\n * integer  正整数【不包含0】\r\n * money    金钱\r\n * TINumber 纳税识别号\r\n * IDCard   身份证\r\n * userName 账户名称【汉字、字母、数字、“-”、“_”的组合】\r\n * URL      URL\r\n * TEL      固定电话\r\n */\r\n\r\n// 手机号\r\nexport const mobile = /^0?(13[0-9]|14[0-9]|15[0-9]|16[0-9]|17[0-9]|18[0-9]|19[0-9])[0-9]{8}$/\r\n\r\n// 电子邮箱\r\nexport const email = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/\r\n\r\n// 密码【6-20位】\r\nexport const password = /^[@A-Za-z0-9!#$%^&*.~,]{6,20}$/\r\n\r\n// 正整数【不包含0】\r\nexport const integer = /^[1-9]\\d*$/\r\n\r\n// 正整数【包含0】\r\nexport const Integer = /^[0-9]\\d*$/\r\n\r\n// 金钱\r\nexport const money = /(^[1-9]([0-9]+)?(\\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/\r\n\r\n// 纳税识别号\r\nexport const TINumber = /^((\\d{6}[0-9A-Z]{9})|([0-9A-Za-z]{2}\\d{6}[0-9A-Za-z]{10,12}))$/\r\n\r\n// 身份证\r\nexport const IDCard = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/\r\n\r\n// 账户名称【汉字、字母、数字、“-”、“_”的组合】\r\nexport const userName = /[A-Za-z0-9_\\-\\u4e00-\\u9fa5]$/\r\n\r\n// URL\r\nexport const URL =\r\n\t/^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\r\n\r\n// 固话\r\nexport const TEL = /0\\d{2,3}-\\d{7,8}/\r\n\r\n\r\n// 营业执照号\r\nexport const licenseNum = /(^(?:(?![IOZSV])[\\dA-Z]){2}\\d{6}(?:(?![IOZSV])[\\dA-Z]){10}$)|(^\\d{15}$)/;\r\n","/**\r\n * 信任登录相关API\r\n */\r\n\r\nimport {\r\n\thttp,\r\n\tMethod\r\n} from '@/utils/request.js';\r\nconst request = http.request;\r\n\r\n\r\n/**\r\n * web 第三方登录\r\n * @param {Object} code\r\n */\r\nexport function webConnect(code) {\r\n\treturn http.request({\r\n\t\turl: `passport/connect/connect/login/web/${code}`,\r\n\t\tmethod: Method.GET,\r\n\t\tneedToken: true,\r\n\t\theader: {\r\n\t\t\t\"clientType\": \"H5\"\r\n\t\t}\r\n\t});\r\n}\r\nexport function openIdLogin(params, clientType) {\r\n\treturn http.request({\r\n\t\turl: `passport/connect/connect/app/login`,\r\n\t\tmethod: Method.POST,\r\n\t\tneedToken: true,\r\n\t\tdata: params,\r\n\t\theader: {\r\n\t\t\t\"clientType\": clientType\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * 第三方登录成功 回调接口\r\n */\r\nexport function loginCallback(state) {\r\n\treturn http.request({\r\n\t\turl: `passport/connect/connect/result?state=${state}`,\r\n\t\tmethod: Method.GET,\r\n\t\tneedToken: false\r\n\t});\r\n}\r\n\r\n\r\n\r\n/**\r\n * 小程序自动登录\r\n * @param params\r\n */\r\nexport function mpAutoLogin(params) {\r\n\treturn http.request({\r\n\t\turl: 'passport/connect/miniProgram/auto-login',\r\n\t\tmethod: Method.GET,\r\n\t\tparams\r\n\t});\r\n}\r\n","/**\n * 入驻类相关api\n */\n\nimport { http, Method } from \"@/utils/request.js\";\n\n// 获取当前用户的代理入驻详情\nexport function getCompanyDetail(params) {\n  return http.request({\n    url: \"/store/store/apply\",\n    method: Method.GET,\n    params,\n  });\n}\n\n// 申请店铺第一步-填写企业信息\nexport function applyFirst(params) {\n  return http.request({\n    url: \"/store/store/apply/first\",\n    method: Method.PUT,\n    params,\n  });\n}\n\n// 申请店铺第二步-填写银行\nexport function applySecond(params) {\n  return http.request({\n    url: \"/store/store/apply/second\",\n    method: Method.PUT,\n    params,\n  });\n}\n\n// 申请店铺第三步-填写银行\nexport function applyThird(params) {\n  return http.request({\n    url: \"/store/store/apply/third\",\n    method: Method.PUT,\n    params,\n  });\n}\n"],"sourceRoot":""}